apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlinx-serialization'
apply plugin: "dagger.hilt.android.plugin"
apply plugin: "kotlin-kapt"

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.2'
        classpath("com.google.dagger:hilt-android-gradle-plugin:$hilt_ver")

    }
}

ktlint {
    version = "$ktlint_version"
    android = true
    outputToConsole = true
    ignoreFailures = false
    verbose = true
}

// Generate a version code from git commit count
static def generateVersionCode() {
    return "git rev-list HEAD --count".execute().text.trim().toInteger()
}


android {
    defaultConfig {
        applicationId "nl.tudelft.trustchain"
        minSdkVersion 26
        compileSdk 34
        targetSdkVersion 34
        versionCode generateVersionCode()
        versionName "0.3.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias "trustchain"
            keyPassword "N/A"
            storeFile file("build.keystore")
            storePassword "N/A"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['../common/libs']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    buildFeatures {
        viewBinding = true
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/kotlinx-coroutines-core.kotlin_module', 'META-INF/DEPENDENCIES']
        }
    }

    namespace 'nl.tudelft.trustchain.app'
}

repositories {
    maven {
        url = 'https://raw.githubusercontent.com/blockchain/api-v1-client-java/mvn-repo/'
    }
    mavenCentral()
    jcenter()
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
    }
}

dependencies {
    implementation project(':debug')
    implementation project(':freedomOfComputing')
    implementation project(':eurotoken')
    implementation project(':valuetransfer')
    implementation project(':peerai')
    implementation project(':hello-world')

    api(project(':common')) {
        exclude group: 'net.java.dev.jna'
    }
    api(project(':common-ethereum')) {
        exclude group: 'net.java.dev.jna'
    }
    api(project(':currencyii')) {
        exclude group: 'net.java.dev.jna'
    }
    api(project(':musicdao')) {
        exclude group: 'net.java.dev.jna'
    }

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:1.0-M1-1.4.0-rc'

    // AndroidX
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.preference:preference-ktx:1.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.work:work-runtime-ktx:2.7.1"

    // Firebase
    implementation 'com.google.firebase:firebase-analytics:21.2.0'
    implementation 'com.google.firebase:firebase-crashlytics:18.3.1'

    // Material
    implementation 'com.google.android.material:material:1.7.0'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Logging
    implementation 'io.github.microutils:kotlin-logging:1.7.7'
    implementation('net.java.dev.jna:jna:5.12.1@aar')
    implementation('com.github.tony19:logback-android:2.0.0')

    implementation 'com.github.MattSkala:recyclerview-itemadapter:0.4'
    implementation project(':currencyii')

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Hilt
    implementation("com.google.dagger:hilt-android:$hilt_ver")
    implementation("androidx.hilt:hilt-navigation-fragment:1.0.0")
    implementation("androidx.hilt:hilt-navigation-compose:1.1.0-alpha01")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_ver")

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation("androidx.room:room-ktx:$room_version")
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt("androidx.room:room-compiler:$room_version")
}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
            "-opt-in=kotlin.ExperimentalUnsignedTypes",
            "-opt-in=kotlin.RequiresOptIn"
    ]
}
